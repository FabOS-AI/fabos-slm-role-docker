#- name: Stop Process 'Docker Desktop'
#  ansible.windows.win_shell: 'Stop-Process -name "Docker Desktop"'
#  changed_when:
#    - stop_process_cmd.stdout_lines | length == 0
#    - stop_process_cmd.stderr_lines | length == 0
#  failed_when: false
#  register: stop_process_cmd
#
#- name: Start Docker Desktop
#  ansible.windows.win_powershell:
#    script: |
#      Start-Process -FilePath "C:\Program Files\Docker\Docker\resources\dockerd.exe"

- name: Setup WSL
  block:
    - name: Enable Windows Features - WSL, Container, Hyper-V
      ansible.windows.win_optional_feature:
        name: "{{ item }}"
        state: present
        include_parent: true
      loop: "{{ docker_desktop_windows_features }}"
      register: install_win_features

    - name: Reboot after activating Windows Features
      when: install_win_features.changed
      ansible.windows.win_reboot:
        post_reboot_delay: 30

    - name: Get Version of wsl
      ansible.windows.win_command:
        cmd: wsl --version
        output_encoding_override: utf-16
      changed_when: false
      failed_when: false
      register: wsl_version_cmd

    - name: Update wsl
      ansible.windows.win_command:
        cmd: wsl --update
        output_encoding_override: utf-16
      register: wsl_update_cmd
      ignore_errors: true
      changed_when: "'installiert' in wsl_update_cmd.stdout"
      when: "not 'WSL-Version' in wsl_version_cmd.stdout_lines"

- name: Install docker-desktop
  ansible.windows.win_package:
    path: "{{ docker_desktop_download_url }}"
    arguments: install --quiet --accept-license --backend=wsl-2 --admin-settings
    product_id: "{{ docker_desktop_product_id }}"
  register: install_docker_desktop
  timeout: 900

- name: Add user to group 'docker-users'
  ansible.windows.win_user:
    name: "{{ ansible_user }}"
    groups: ['docker-users']
    groups_action: add

- name: Expose TCP Port
  ansible.builtin.include_tasks: helper/add_config_for_expose_tcp_port_win.yml
  when: expose_docker_tcp_port

- name: Reboot after Docker Desktop Install / TCP Expose
  when: install_docker_desktop.changed or copy_config_file_cmd.changed | default(false)
  ansible.windows.win_reboot:

#- name: (Re)Start Docker Desktop
#  when:
#    - not install_docker_desktop.changed
#    - copy_config_file_cmd.changed | default(false)
#  block:
#  - name: Stop Process 'Docker Desktop'
#    ansible.windows.win_shell: 'Stop-Process -name "Docker Desktop"'
#    changed_when:
#      - stop_process_cmd.stdout_lines | length == 0
#      - stop_process_cmd.stderr_lines | length == 0
#    failed_when: false
#    register: stop_process_cmd
#
#  - name: Start Docker Desktop
#    ansible.windows.win_powershell:
#      script: |
#        Start-Process -FilePath "C:\Program Files\Docker\Docker\Docker Desktop.exe"

- name: Wait till Docker Desktop is available
  ansible.windows.win_command: docker ps
  register: docker_ps_cmd
  until: docker_ps_cmd.rc == 0
  retries: 30
  delay: 2
  changed_when: false

- name: Set Container Type
  block:
  - name: Get Container Type (Linux / Windows)
    ansible.windows.win_command:
      cmd: "docker info --format {%raw%}{{.OSType}}{%endraw%}"
    register: docker_info_os_type
    failed_when: false
    changed_when: false

  - name: Switch to Windows Containers
    when: "'windows' not in docker_info_os_type.stdout_lines"
    ansible.windows.win_command:
      cmd: '"C:\\Program Files\\Docker\\Docker\\DockerCli.exe" -SwitchWindowsEngine'